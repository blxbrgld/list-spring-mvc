<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>gr.blxbrgld</groupId>
	<artifactId>myList</artifactId>
	<name>myList</name>
	<packaging>war</packaging>
	<version>3.1</version>
    <url>https://github.com/blxbrgld/list-spring-mvc</url>
	<developers>
		<developer>
			<id>blxbrgld</id>
			<name>Nikos Papadopoulos</name>
			<email>nikolaos.i.papadopoulos@gmail.com</email>
			<roles>
				<role>developer</role>
			</roles>
		</developer>
	</developers>
	<properties>
		<java-version>7</java-version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<spring-framework-version>4.0.0.RELEASE</spring-framework-version>
		<spring-security-version>3.2.0.RELEASE</spring-security-version>
		<hibernate-version>4.3.1.Final</hibernate-version>
		<hibernate-search-version>4.5.0.Final</hibernate-search-version>
        <mysql-version>5.1.6</mysql-version>
		<commons-dbcp-version>1.4</commons-dbcp-version>
		<commons-lang-version>3.2.1</commons-lang-version>
		<commons-fileupload-version>1.3.1</commons-fileupload-version>
		<commons-io-version>2.4</commons-io-version>
		<commons-beanutils-version>1.9.1</commons-beanutils-version>
		<commons-digester-version>2.1</commons-digester-version>
		<commons-codec-version>1.9</commons-codec-version>
        <commons-math-version>2.0</commons-math-version>
        <apache-tiles-version>3.0.5</apache-tiles-version>
        <apache-poi-version>3.10-FINAL</apache-poi-version>
		<jackson-version>1.9.13</jackson-version>
        <thumbnailator-version>[0.4, 0.5)</thumbnailator-version>
        <logback-version>1.1.3</logback-version>
        <jcl-over-slf4j-version>1.7.12</jcl-over-slf4j-version>
        <junit-version>4.11</junit-version>
        <mockito-version>1.9.5</mockito-version>
        <hamcrest-version>1.3</hamcrest-version>
        <h2.version>1.4.187</h2.version>
        <servlet-api-version>2.5</servlet-api-version>
        <jsp-api-version>2.1</jsp-api-version>
        <jstl-version>1.2</jstl-version>
        <!-- Exclude Third Party Libraries From SonarQube Analysis -->
        <sonar.exclusions>
            src/main/webapp/resources/bootbox-4.4.0/**,
            src/main/webapp/resources/bootstrap-3.3.5/**,
            src/main/webapp/resources/font-awesome-4.4.0/**,
            src/main/webapp/resources/tinymce/**
        </sonar.exclusions>
        <!-- Sonar JDBC Properties Are Not Required Anymore. The Communication Is Done With Web Services -->
        <sonar.host.url>http://localhost:9000</sonar.host.url>
    </properties>
    <!-- Profiles -->
    <!-- mvn clean install -Pdev To Run Only Unit Tests -->
    <!-- mvn clean install -Pprod To Run Both Unit + Integration Tests -->
    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <filters>
                    <!-- Files To Filter (For Now The Properties Are The Same For Both Profiles) -->
                    <filter>src/main/resources/configuration.properties</filter>
                </filters>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                    </resource>
                </resources>
            </build>
            <properties>
                <build.profile.id>dev</build.profile.id>
                <skip.integration.tests>true</skip.integration.tests>
                <skip.unit.tests>false</skip.unit.tests>
            </properties>
        </profile>
        <profile>
            <id>prod</id>
            <build>
                <filters>
                    <!-- Files To Filter (For Now The Properties Are The Same For Both Profiles) -->
                    <filter>src/main/resources/configuration.properties</filter>
                </filters>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                    </resource>
                </resources>
            </build>
            <properties>
                <build.profile.id>prod</build.profile.id>
                <skip.integration.tests>false</skip.integration.tests>
                <skip.unit.tests>false</skip.unit.tests>
            </properties>
        </profile>
    </profiles>
    <!-- Plugins -->
    <build>
        <plugins>
            <!-- Compiler Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <compilerArgument>-Xlint:all</compilerArgument>
                    <showWarnings>true</showWarnings>
                </configuration>
            </plugin>
            <!-- Adding A Second Test Source Directory + A Second Test Resource Directory -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.9.1</version>
                <executions>
                    <execution>
                        <id>add-it-source</id>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/integration/java</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-it-resource</id>
                        <goals>
                            <goal>add-test-resource</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>src/integration/resources</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- WAR Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.6</version>
            </plugin>
            <!-- Surefire Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19.1</version>
                <configuration>
                    <!-- Sets the VM Argument Line Used When Unit Tests Run -->
                    <argLine>${surefireArgLine}</argLine>
                    <!-- Skips Unit Tests If Value From Profile Is true -->
                    <skipTests>${skip.unit.tests}</skipTests>
                    <excludes>
                        <exclude>**/*IntegrationTest.java</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <!-- Surefire Reports [mvn site] -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>2.19.1</version>
            </plugin>
            <!-- Failsafe Plugin -->
            <!-- mvn failsafe:integration-test To Run Only The Integration Tests -->
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.19.1</version>
                <configuration>
                    <!-- Sets The VM Argument Line Used When Integration Tests Run -->
                    <argLine>${failsafeArgLine}</argLine>
                    <!-- Skips Unit Tests If Value From Profile Is true -->
                    <skipTests>${skip.integration.tests}</skipTests>
                    <includes>
                        <include>**/*IntegrationTest.java</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>verify</id>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- JaCoCo Plugin -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.7.7.201606060606</version>
                <executions>
                    <!-- Unit Tests -->
                    <execution>
                        <id>pre-unit-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${basedir}/target/jacoco.exec</destFile>
                            <propertyName>surefireArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${basedir}/target/jacoco.exec</dataFile>
                            <outputDirectory>${basedir}/target/jacoco-ut</outputDirectory>
                        </configuration>
                    </execution>
                    <!-- Integration Tests -->
                    <execution>
                        <id>pre-integration-test</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${basedir}/target/jacoco-it.exec</destFile>
                            <propertyName>failsafeArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>post-integration-test</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${basedir}/target/jacoco-it.exec</dataFile>
                            <outputDirectory>${basedir}/target/jacoco-it</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- SonarQube Plugin
                i. \conf\wrapper.conf Should Point To Java 8 JDK (wrapper.java.command)
                ii. IDE's Project JDK Should Point To Java 8 JDK
                iii. sonar:sonar To Run The Analysis
                iv. Add set.TMPDIR=\path\to\tmp\dir In \conf\wrapper.conf If SonarQube Can Not Post The Results
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>3.0.2</version>
            </plugin>
            <!-- Liquibase Plugin -->
            <!-- mvn resources:resources liquibase:liguibase-goal -P<profile_name> -->
            <!-- For Now Both Profiles Use The Same Liquibase Properties So You Can Skip The -P<profile_name> Option -->
            <plugin>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-maven-plugin</artifactId>
                <version>3.3.2</version>
                <configuration>
                    <propertyFile>target/classes/database/liquibase/liquibase.properties</propertyFile>
                    <propertyFileWillOverride>true</propertyFileWillOverride>
                    <promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>${mysql-version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
    <!-- Dependencies -->
	<dependencies>
		<!--Spring Framework-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring-framework-version}</version>
			<exclusions>
				<!--Exclude Commons Logging-->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				 </exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring-framework-version}</version>
		</dependency>
		<dependency>
    		<groupId>org.springframework</groupId>
    		<artifactId>spring-orm</artifactId>
    		<version>${spring-framework-version}</version>
		</dependency>
		<!-- Spring Security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>${spring-security-version}</version>
		</dependency>
	    <dependency>
	        <groupId>org.springframework.security</groupId>
	        <artifactId>spring-security-config</artifactId>
	        <version>${spring-security-version}</version>
	    </dependency>		
		<dependency>
	        <groupId>org.springframework.security</groupId>
	        <artifactId>spring-security-web</artifactId>
	        <version>${spring-security-version}</version>
	    </dependency>
	    <dependency>
        <groupId>org.springframework.security</groupId>
        	<artifactId>spring-security-taglibs</artifactId>
        	<version>${spring-security-version}</version>
    	</dependency>
		<!-- Hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate-version}</version>
		</dependency>
		<dependency>
		     <groupId>org.hibernate</groupId>
		     <artifactId>hibernate-entitymanager</artifactId>
		     <version>${hibernate-version}</version>
		</dependency>
		<!-- Hibernate Validator -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate-version}</version>
		</dependency>
		<!-- Hibernate Search -->
		<dependency>
		    <groupId>org.hibernate</groupId>
		    <artifactId>hibernate-search</artifactId>
		    <version>${hibernate-search-version}</version>
		</dependency>
		<dependency>
		   	<groupId>org.hibernate</groupId>
		   	<artifactId>hibernate-search-analyzers</artifactId>
		   	<version>${hibernate-search-version}</version>
		</dependency>
		<!-- MySQL Connector -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql-version}</version>
		</dependency>
		<!-- Apache Commons Libraries -->
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>${commons-dbcp-version}</version>
		</dependency>		
		<dependency>
	        <groupId>org.apache.commons</groupId>
	        <artifactId>commons-lang3</artifactId>
	        <version>${commons-lang-version}</version>
      	</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>${commons-fileupload-version}</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io-version}</version>
		</dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>${commons-beanutils-version}</version>
		</dependency>
		<dependency>
			<groupId>commons-digester</groupId>
			<artifactId>commons-digester</artifactId>
			<version>${commons-digester-version}</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>${commons-codec-version}</version>
		</dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math</artifactId>
            <version>${commons-math-version}</version>
        </dependency>
		<!-- Apache Tiles -->
		<dependency>
			<groupId>org.apache.tiles</groupId>
		    <artifactId>tiles-extras</artifactId>
		    <version>${apache-tiles-version}</version>
		</dependency>
		<!-- Apache POI -->
		<dependency>
      		<groupId>org.apache.poi</groupId>
      		<artifactId>poi</artifactId>
      		<version>${apache-poi-version}</version>
    	</dependency>
		<!-- Jackson -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
			<version>${jackson-version}</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>${jackson-version}</version>
		</dependency>
		<!-- Thumbnails Generation Library -->
		<dependency>
			<groupId>net.coobird</groupId>
			<artifactId>thumbnailator</artifactId>
			<version>${thumbnailator-version}</version>
		</dependency>
        <!-- Logging -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback-version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${logback-version}</version>
        </dependency>
        <!-- Bridge Logging From JCL To SLF4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${jcl-over-slf4j-version}</version>
        </dependency>
		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>${servlet-api-version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>${jsp-api-version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl-version}</version>
		</dependency>
		<!-- Testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit-version}</version>
			<scope>test</scope>
		</dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring-framework-version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito-version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <artifactId>hamcrest-core</artifactId>
                    <groupId>org.hamcrest</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>${hamcrest-version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
            <scope>test</scope>
        </dependency>
	</dependencies>
</project>